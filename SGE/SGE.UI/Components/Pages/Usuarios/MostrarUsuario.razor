@page "/usuario/{IdUsuario:int?}"

<!--Caso de uso Usuarios-->
@inject CasoDeUsoObtenerUsuario consultar
@inject CasoDeUsoSesionUsuario sesion
@inject CasoDeUsoModificarUsuario modificar

<!--Uso de la pagina-->
@inject NavigationManager navigationManager //Navegar entre paginas
@rendermode InteractiveServer //Para que se actulice la pagina en caso de errores

@if(!_error){
    if(!_modificarUsuario){ //no se modifica el usuario
        <h3>Datos de Usuario</h3>
        
        <div style="font-size: large;">
            <ul>
                <li>Nombre: @_usuario.Nombre.</li>
                <li>Apellido: @_usuario.Apellido.</li>
                <li>Correo: @_usuario.Correo.</li>
                @if((_usuario.Permisos != null)&&(_usuario.Permisos.Count == 0)){
                    <li>El usuario no posee permisos adicionales.</li>
                }
                else if(_usuario.Permisos != null) {
                   <li>Actualmente el usuario solo posee permisos para:
                    <ul>
                        @foreach(Permiso p in _usuario.Permisos){
                            <li>@p.</li>
                        }
                    </ul>
                </li> 
                }
                
            </ul>
        </div>

        if(_usuario.Id == sesion.SesionActual().Id){
            <button @onclick="_MensajeCerrarSesion" class="btn btn-primary" style="margin-right: 10px;" >Cerrar sesion</button>
        }
        
        <button @onclick="_PaginaModificar" class="btn btn-secondary">Modificar datos personales</button>

    }
    else{ //Se modifica el usuario
        if(_usuario.Id == sesion.SesionActual().Id){ //El usuario actual quiere modificar sus datos
            <h3>Modificar datos de Usuario</h3>

            <div>
                Ingrese su nuevo nombre: <br>
                <input @bind="_usuario.Nombre" placeholder="Nombre">
            </div>

            <div>
                Ingrese su nuevo apellido: <br>
                <input @bind="_usuario.Apellido" placeholder="Apellido">
            </div>

            <div>
                Ingrese su nuevo correo: <br>
                <input @bind="_usuario.Correo" placeholder="Correo">
            </div>

            <div>
                Ingrese su nueva contraseña:  <br>
                <input @bind="_contraseñaNueva" placeholder="Contraseña">
            </div>
            <br>
            <button @onclick="_ConfirmarUsuario" class="btn btn-primary" >Confirmar cambios</button>

            <button @onclick="_MensajePerderDatos" class="btn btn-secondary" >Volver</button>
        }
        else{ //El administrador quiere agragr o eliminar permisos
            <h3>Vista de admonistrador</h3>

            <p>Inidque los permisos a otorgar y quitar</p>

            <div>
                @if((_usuario.Permisos != null)&&(_usuario.Permisos.Count() < 6)){
                    <table class="table"> <!--Tabla para agregar permisos-->
                        <tr>
                            <th>Permisos a otorgar:</th>
                            <th>Accion</th>
                        </tr>
                        <tbody>
                            <tr>
                                @if(!_usuario.Permisos.Contains(Permiso.ExpedienteAlta)){
                                <td>Permiso de alta de Expedientes</td>
                                <td><button @onclick="()=>_AgregarPermiso(Permiso.ExpedienteAlta)" class="btn btn-primary" >Agregar</button></td>
                                }
                            </tr>
                            <tr>
                                @if(!_usuario.Permisos.Contains(Permiso.ExpedienteBaja)){
                                    <td>Permiso de baja de Expedientes</td>
                                    <td><button @onclick="()=>_AgregarPermiso(Permiso.ExpedienteBaja)" class="btn btn-primary" >Agregar</button></td>
                                }
                            </tr>
                            <tr>
                                @if(!_usuario.Permisos.Contains(Permiso.ExpedienteModificacion)){
                                    <td>Permiso de modificacion de Expedientes</td>
                                    <td><button  @onclick="()=>_AgregarPermiso(Permiso.ExpedienteModificacion)" class="btn btn-primary" >Agregar</button></td>
                                }
                            </tr>
                            <tr>
                                @if(!_usuario.Permisos.Contains(Permiso.TramiteAlta)){
                                    <td>Permiso de alta de Tramites</td>
                                    <td><button  @onclick="()=>_AgregarPermiso(Permiso.TramiteAlta)" class="btn btn-primary" >Agregar</button></td>
                                }
                            </tr>
                            <tr>
                                @if(!_usuario.Permisos.Contains(Permiso.TramiteBaja)){
                                    <td>Permiso de baja de Tramites</td>
                                    <td><button  @onclick="()=>_AgregarPermiso(Permiso.TramiteBaja)" class="btn btn-primary" >Agregar</button></td>
                                }
                            </tr>
                            <tr>
                                @if(!_usuario.Permisos.Contains(Permiso.TramiteModificacion)){
                                    <td>Permiso de modificacion de Tramites</td>
                                    <td><button  @onclick="()=>_AgregarPermiso(Permiso.TramiteModificacion)" class="btn btn-primary" >Agregar</button></td>
                                }
                            </tr>
                        </tbody>
                    </table>
                }
                else{
                    <p>No existen permisos para agregar</p>
                }  
            </div>
            <div>
                @if((_usuario.Permisos != null)&&(_usuario.Permisos.Count() > 0)){
                    <table class="table"> <!--Tabla para eliminar permisos-->
                        <tr>
                            <th>Permisos a quitar:</th>
                            <th>Accion</th>
                        </tr>
                        <tbody>
                            <tr>
                                @if(_usuario.Permisos.Contains(Permiso.ExpedienteAlta)){
                                <td>Permiso de alta de Expedientes</td>
                                <td><button @onclick="()=>_EliminarPermiso(Permiso.ExpedienteAlta)" class="btn btn-danger">Eliminar</button></td>
                                }
                            </tr>
                            <tr>
                                @if(_usuario.Permisos.Contains(Permiso.ExpedienteBaja)){
                                    <td>Permiso de baja de Expedientes</td>
                                    <td><button @onclick="()=>_EliminarPermiso(Permiso.ExpedienteBaja)" class="btn btn-danger" >Eliminar</button></td>
                                }
                            </tr>
                            <tr>
                                @if(_usuario.Permisos.Contains(Permiso.ExpedienteModificacion)){
                                    <td>Permiso de modificacion de Expedientes</td>
                                    <td><button @onclick="()=>_EliminarPermiso(Permiso.ExpedienteModificacion)" class="btn btn-danger" >Eliminar</button></td>
                                }
                            </tr>
                            <tr>
                                @if(_usuario.Permisos.Contains(Permiso.TramiteAlta)){
                                    <td>Permiso de alta de Tramites</td>
                                    <td><button @onclick="()=>_EliminarPermiso(Permiso.TramiteAlta)" class="btn btn-danger" >Eliminar</button></td>
                                }
                            </tr>
                            <tr>
                                @if(_usuario.Permisos.Contains(Permiso.TramiteBaja)){
                                    <td>Permiso de baja de Tramites</td>
                                    <td><button @onclick="()=>_EliminarPermiso(Permiso.TramiteBaja)" class="btn btn-danger" >Eliminar</button></td>
                                }
                            </tr>
                            <tr>
                                @if(_usuario.Permisos.Contains(Permiso.TramiteModificacion)){
                                    <td>Permiso de modificacion de Tramites</td>
                                    <td><button @onclick="()=>_EliminarPermiso(Permiso.TramiteModificacion)" class="btn btn-danger" >Agregar</button></td>
                                }                        
                            </tr>
                        </tbody>
                    </table>
                }
                else{
                    <p>No existen permisos para eliminar</p>
                } 
            </div>

            <button @onclick="_VolverUsuario" class="btn btn-secondary" >Volver</button>
        }   
    }
}
else{
    <ComponentError Text="@_stMensaje" ErrorSesion="_error" />
}

<Mensaje @ref="_mensajeCerrarSesion" Text="@_stMensaje" eventCallback="_CerrarSesion" />

<Mensaje @ref="_mensajePerderDatos" Text="@_stMensaje" eventCallback="_VolverUsuario" />

<ConfirmarUsuario @ref="_confirmarUsuario" eventCallback="_ModificarUsuario" />

@code {

#region Variables de Usuario
    [Parameter] public int? IdUsuario {get; set;}
    private Usuario _usuario = new Usuario();
    private string _contraseñaNueva = "";
    private bool _modificarUsuario = false; //En caso de que se dese modificar datos del usuario

#endregion Varaibles de Usuario

#region Variables de Errores y Mensajes
    private bool _error = false; //Saber se ocurrio un error al acceder a la base de datos
    private Mensaje _mensajeCerrarSesion = null!;
    private Mensaje _mensajePerderDatos = null!;
    private string _stMensaje = "";
    private ConfirmarUsuario _confirmarUsuario = null!;

#endregion Variables de Errores y Mensajes

#region Metodos de pagina
    protected override void OnParametersSet(){
        try{
            sesion.UsuarioActivo(out _error);
            if(IdUsuario != null){
                _usuario = consultar.Ejecutar(IdUsuario.Value);
            }
        }
        catch (Exception e){ //catch para los errores en el caso de suo
            _stMensaje = $"Ocurrio un error inesperado. {e.Message}";
            _error = true; //Muestra en la pagina el error
        }
    }

    private void _VolverListarUsuarios(string url){ //Solo administrador
        navigationManager.NavigateTo("/listarusuarios");
    }

    private void _VolverUsuario(){
        _modificarUsuario = false;

    }

    private void _PaginaModificar(){
        _modificarUsuario = true;
    }

#endregion Metodos de pagina

#region Metodos de usuario
    private void _CerrarSesion(){
        sesion.CerrarSesion(sesion.SesionActual());
        navigationManager.NavigateTo("/");
    }

    private void _AgregarPermiso(Permiso permiso){
       modificar.AgregarPermiso(_usuario.Id, permiso);
       _usuario.Permisos = consultar.Ejecutar(_usuario.Id).Permisos;
    }

    private void _EliminarPermiso(Permiso permiso){
       modificar.EliminarPermiso(_usuario.Id, permiso);
       _usuario.Permisos = consultar.Ejecutar(_usuario.Id).Permisos;
    }

    private void _ModificarUsuario(){
        modificar.Modificar(_usuario, _contraseñaNueva);
        _VolverUsuario();
    }

#endregion Metodos de usuario

#region Metodos de mensaje

    private void _MensajeCerrarSesion(){
        _stMensaje = "¿Esta seguro que quiere cerrar la sesion?";
        _mensajeCerrarSesion.MostrarMensaje();
    }

    private void _MensajePerderDatos(){
        _stMensaje = "¿Está seguro que desea salir? Los datos que haya ingresado se perderán.";
        _mensajePerderDatos.MostrarMensaje();
    }

    private void _ConfirmarUsuario(){
        _confirmarUsuario.MostrarConfirmar();
    }

#endregion Metodos de mensaje

}
