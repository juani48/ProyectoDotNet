@page "/expediente/{Id:int?}"
@using SGE.UI.Components

<!--Caso de uso para Expedientes-->
@inject CasoDeUsoExpedienteConsultaPorId consulta // consultar expediente
@inject CasoDeUsoExpedienteAlta agregar //Alta en la base de datos SQLite


<!--Uso de la pagina-->
@inject NavigationManager navigationManager //Navegar entre paginas
@rendermode InteractiveServer //Para que se actulice la pagina en caso de errores

@if(!_error){ //En caso de error al consultar la base de datos (OnParamaetersSet)
    @if(!_nuevoExpediente){ //En caso de que no se ingrese un nuevo expediente y se deba mostrar uno almacenado

        <!--MOSTRAR INFORMACION DE UN EXPEDIENTE-->
        <h3>@_expediente.Caratula</h3>
        <div>
            <ul>
                <li>El expediente se encuentra @_expediente.EstadoExpediente</li>
                <li>La fecha de inicio del expediente fue: @_expediente.FechaCreacion</li>
                <li>Su última modificación se realizó @_expediente.FechaModiificacion por el usuario con ID @_expediente.IdUsuario </li>
            </ul>
        </div>
        
        <!--TABLA CON LOS TRAMITES ASOCIADOS-->
        <h4>Tramites asociados</h4>
        <table class="table">
            <thead>
                <tr>
                    <th>ID</th>
                    <th>Etiqueta del tramite</th>
                    <th>Contenido</th>
                    <th>Fecha creacion</th>
                    <th>Fecha modificacion</th>
                    <th>ID de usuario</th>
                </tr> 
            </thead>
            <tbody>
                @foreach(var t in _lista){ // Informacion de cada tramite
                    <tr>
                        <td>@t.Id</td>
                        <td>@t.Etiqueta</td>
                        <td>@t.Contenido</td>
                        <td>@t.FechaCreacion</td>
                        <td>@t.FechaModificacion</td>
                        <td>@t.IdUsuario</td>
                    </tr>
                }
            </tbody>
        </table>
        <button @onclick="_Volver" class="btn btn-secondary" >Volver</button> <!--Volver al menu con todos los expedientes-->
        <button @onclick="_ModificarExpediente" class="btn btn-primary" >Modificar</button> <!--Modificar el expediente-->
    }
    else{ // En caso de ingresar un nuevo expediente

        <h3>Ingrese los datos para el nuevo expediente</h3>

        <!--Ingreso de la caratula-->
        <input placeholder="Carátula del expediente:" @bind="_expediente.Caratula" style="margin-bottom: 10px;">

        <!--Selector del estado del expediente-->
        <div style="margin-bottom: 10px;">
            <select @bind="_expediente.EstadoExpediente">
                <option value="RecienIniciado">RecienIniciado</option>
                <option value="ParaResolver">ParaResolver</option>
                <option value="ConResolucion">ConResolucion</option>
                <option value="EnNotificacion">EnNotificacion</option>
                <option value="Finalizado">Finalizado</option>
            </select>
        </div>
        <div>
            <button @onclick="_Alta" class="btn btn-primary" >Aceptar</button> <!--Llama al caso de uso altar-->
            <button @onclick="_Mensaje" class="btn btn-secondary" >Volver</button> <!--Volver al menu con todos los expedientes-->
        </div>   
    }
}
else{
    <ComponentError Text="@_stMensaje" /> //En caso de error al instanciar el componenete (OnParamaetersSet)
}

<Mensaje @ref="_mensaje" Text="@_stMensaje" eventCallback="_Volver" /> <!--Se asegura de que el usuario desee regresar al menu de expedientes-->


@code {
#region Variables Expedente
    [Parameter] public int? Id {get; set;} //ID del expediente envia como parametro en la URL de la pagina
    private Expediente _expediente = new Expediente(); //Obj expediente

#endregion Variables Expedente

#region Variables Tramites
    //lista de tramites asociados
    private List<Tramite> _lista = new List<Tramite>();

#endregion Variables Tramites
    
#region Variables Errores y Mensajes
    //Gestion de bools y errores
    private bool _nuevoExpediente; //Para saber si se debe ingresar un nuevo expediente o mostrar uno almacenado
    private bool _error = false; //Saber se ocurrio un error al acceder a la base de datos

#endregion Variables Errores y Mensajes

#region Metodos de pagina
    //Metodos
    protected override void OnParametersSet(){ 
        try{
            if(Id != null){ //Se envio un ID "existente"
                _nuevoExpediente = false;
                _expediente = consulta.Ejecutar(this.Id.Value, out _lista); //caso de uso throw exception en caso de null
            }
            else{
                _stMensaje = "¿Está seguro que desea salir? Los datos que haya ingresado se perderán.";
                _nuevoExpediente = true; //El ID fue null
            }
        }
        catch (Exception e){ //catch para los errores en el caso de suo
            _stMensaje = $"Ocurrio un error inesperado. {e.Message}";
            _error = true; //Muestra en la pagina el error
        }
    }

    //Regresa a la pagina con la lista de Expeidentes
    private void _Volver(){
        navigationManager.NavigateTo("/listarexpedientes");
    }
#endregion Metodos de pagina

#region Metodos de Expedientes
    private void _Alta(){
        try{
            //provisorio fasalta la gestion de usuairos
            _expediente.IdUsuario = 1;
            //
            agregar.Ejecutar(_expediente);
            Id = _expediente.Id;
            _expediente = new Expediente();
            navigationManager.NavigateTo($"/expediente/{Id}"); //En caso de hacer la alta, se envia a la pagina especifica del Expediente
        }
        catch(Exception e){
            _stMensaje = $"Ocurrio un error inesperado. {e.Message}";
            _error = true; //Muestra en la pagina el error
        }
    }

    //Envia al usuario a la pagina para modificar el Expediente
    private void _ModificarExpediente(){
        navigationManager.NavigateTo($"/modificarexpediente/{_expediente.Id}");
    }
    
#endregion Metodos de Expedente

#region Gestion de Mensajes

    //Varaible para llamar al objeto Mensaje
    private Mensaje _mensaje = null!;

    //String para los objetos Mensaje y para los Errores
    private string _stMensaje = "";

    //Metodos que muestar el mensaje emergente
    private void _Mensaje(){
        _mensaje.MostrarMensaje();
    }
#endregion Gestion de Mensajes

}
